count_adversaries = {
	PREV = { set_variable = { which = adversary_count value = 0} }
	any_opinion_modifier_target = {
		limit = {
			reverse_has_opinion_modifier = {
				who = PREV
				modifier = opinion_adversary
			}
		}
		PREV = { change_variable = { which = adversary_count value = 1} }
	}
}
court_size_flag = {
	trigger_switch = {
		on_trigger = tier
		COUNT = {
			set_character_flag = court_count_flag
		}
		DUKE = {
			set_character_flag = court_duke_flag
		}
		KING = {
			set_character_flag = court_king_flag
		}
		EMPEROR = {
			set_character_flag = court_emperor_flag
		}
	}
}

clear_court_size_flag = {
	trigger_switch = {
		on_trigger = tier
		COUNT = {
			clr_character_flag = court_count_flag
		}
		DUKE = {
			clr_character_flag = court_duke_flag
		}
		KING = {
			clr_character_flag = court_king_flag
		}
		EMPEROR = {
			clr_character_flag = court_emperor_flag
		}
	}
}

clear_mortal_ruler_influence_flags = {
	if = {
		limit = {
			has_character_flag = terrible_mortal_ruler_influence
		}
		clr_character_flag = terrible_mortal_ruler_influence
	}
	if = {
		limit = {
			has_character_flag = bad_mortal_ruler_influence
		}
		clr_character_flag = bad_mortal_ruler_influence
	}
	if = {
		limit = {
			has_character_flag = average_mortal_ruler_influence
		}
		clr_character_flag = average_mortal_ruler_influence
	}
	if = {
		limit = {
			has_character_flag = good_mortal_ruler_influence
		}
		clr_character_flag = good_mortal_ruler_influence
	}
	if = {
		limit = {
			has_character_flag = superb_mortal_ruler_influence
		}
		clr_character_flag = superb_mortal_ruler_influence
	}
}

increase_mortal_influence = {
	capital_scope = {
		trigger_switch = {
		on_trigger = has_province_modifier
			good_mortal_ruler_influence = {
				remove_province_modifier = good_mortal_ruler_influence
				add_province_modifier = { name = superb_mortal_ruler_influence duration = -1 }
			}
			average_mortal_ruler_influence = {
				remove_province_modifier = average_mortal_ruler_influence
				add_province_modifier = { name = good_mortal_ruler_influence duration = -1 }
			}
			bad_mortal_ruler_influence = {
				remove_province_modifier = bad_mortal_ruler_influence
				add_province_modifier = { name = average_mortal_ruler_influence duration = -1 }
			}
			terrible_mortal_ruler_influence = {
				remove_province_modifier = terrible_mortal_ruler_influence
				add_province_modifier = { name = bad_mortal_ruler_influence duration = -1 }
			}
		}
		if = {
			limit = {
				NOR = {
					has_province_modifier = superb_mortal_ruler_influence
					has_province_modifier = good_mortal_ruler_influence
					has_province_modifier = average_mortal_ruler_influence
					has_province_modifier = bad_mortal_ruler_influence
					has_province_modifier = terrible_mortal_ruler_influence
				}
			}
			add_province_modifier = { name = average_mortal_ruler_influence duration = -1 }
		}
	}
}
decrease_mortal_influence = {
	capital_scope = {
		trigger_switch = {
		on_trigger = has_province_modifier
			superb_mortal_ruler_influence = {
				remove_province_modifier = superb_mortal_ruler_influence
				add_province_modifier = { name = good_mortal_ruler_influence duration = -1 }
			}
			good_mortal_ruler_influence = {
				remove_province_modifier = good_mortal_ruler_influence
				add_province_modifier = { name = average_mortal_ruler_influence duration = -1 }
			}
			average_mortal_ruler_influence = {
				remove_province_modifier = average_mortal_ruler_influence
				add_province_modifier = { name = bad_mortal_ruler_influence duration = -1 }
			}
			bad_mortal_ruler_influence = {
				remove_province_modifier = bad_mortal_ruler_influence
				add_province_modifier = { name = terrible_mortal_ruler_influence duration = -1 }
			}
		}
		if = {
			limit = {
				NOR = {
					has_province_modifier = superb_mortal_ruler_influence
					has_province_modifier = good_mortal_ruler_influence
					has_province_modifier = average_mortal_ruler_influence
					has_province_modifier = bad_mortal_ruler_influence
					has_province_modifier = terrible_mortal_ruler_influence
				}
			}
			add_province_modifier = { name = bad_mortal_ruler_influence duration = -1 }
		}
	}
}

pod_cleanse_mortal_choice_flags = {
	capital_scope = {
	if = {
		limit = { has_province_flag = MI_ghouling_nobles }
		clr_province_flag = MI_ghouling_nobles
	}
	if = {
		limit = { has_province_flag = MI_buying_favors }
		clr_province_flag = MI_buying_favors
	}
	if = {
		limit = { has_province_flag = MI_using_spymaster }
		clr_province_flag = MI_using_spymaster
	}
	if = {
		limit = { has_province_flag = MI_using_harpy }
		clr_province_flag = MI_using_harpy
	}
	}
	
}

pod_cleanse_all_mortal_influence= {
	capital_scope = {
	if = {
		limit = { has_province_flag = MI_ghouling_nobles }
		clr_province_flag = MI_ghouling_nobles
	}
	if = {
		limit = { has_province_flag = MI_buying_favors }
		clr_province_flag = MI_buying_favors
	}
	if = {
		limit = { has_province_flag = MI_using_spymaster }
		clr_province_flag = MI_using_spymaster
	}
	if = {
		limit = { has_province_flag = MI_using_harpy }
		clr_province_flag = MI_using_harpy
	}
	if = {
		limit = { has_province_modifier = superb_mortal_ruler_influence }
		remove_province_modifier = superb_mortal_ruler_influence
	}
	if = {
		limit = { has_province_modifier = good_mortal_ruler_influence }
		remove_province_modifier = good_mortal_ruler_influence
	}
	if = {
		limit = { has_province_modifier = average_mortal_ruler_influence }
		remove_province_modifier = average_mortal_ruler_influence
	}
	if = {
		limit = { has_province_modifier = bad_mortal_ruler_influence }
		remove_province_modifier = bad_mortal_ruler_influence
	}
	if = {
		limit = { has_province_modifier = terrible_mortal_ruler_influence }
		remove_province_modifier = terrible_mortal_ruler_influence
	}
	if = {
		limit = { has_province_flag = family_controlled }
		clr_province_flag = family_controlled
	}
	if = {
		limit = { has_province_flag = servants_controlled }
		clr_province_flag = servants_controlled
	}
	if = {
		limit = { has_province_flag = powerful_mortal_controlled }
		clr_province_flag = powerful_mortal_controlled
	}
	if = {
		limit = { has_province_flag = council_controlled }
		clr_province_flag = council_controlled
	}
	if = {
		limit = { has_province_flag = family_empowered }
		clr_province_flag = family_empowered
	}
	if = {
		limit = { has_province_flag = MI_initial_decision_taken }
		clr_province_flag = MI_initial_decision_taken
	}
	}
	
}
pod_cleanse_secret_society = {
}
pod_player_elder_imprison_effect = {
	FROM = {
		if = {
			limit = { 
				ai = no
				ROOT = { NOT = { trait = torpor } }
			}
			log = "[From.GetTitledName] is player, going to events"
			ROOT = {
				save_event_target_as = imprison_target
			}
			character_event = { id = POD_vampire_kill_imprison.1 }
		}
	}
}
pod_reset_kill_elder_flags = {
	#log = "YOHOO: checking to clear kill elder flags"
	if = {
		limit = { has_character_flag = attack_elder_breakthrough_1 }
		clr_character_flag = attack_elder_breakthrough_1
	}
	if = {
		limit = { has_character_flag = attack_elder_breakthrough_2 }
		clr_character_flag = attack_elder_breakthrough_2
	}
	if = {
		limit = { has_character_flag = attack_elder_breakthrough_3 }
		clr_character_flag = attack_elder_breakthrough_3
	}
	if = {
		limit = { has_character_flag = attack_elder_breakthrough_4 }
		clr_character_flag = attack_elder_breakthrough_4
	}
	if = {
		limit = { has_character_flag = attack_elder_breakthrough_5 }
		clr_character_flag = attack_elder_breakthrough_5
	}
	if = {
		limit = { has_character_flag = attack_elder_reckless }
		clr_character_flag = attack_elder_reckless
	}
	if = {
		limit = { has_character_flag = is_aiming_at_an_elder }
		clr_character_flag = is_aiming_at_an_elder
	}
}

pod_set_kill_elder_flag = {
	#log = "SETTING ELDER KILLING FLAG"
	set_character_flag = is_aiming_at_an_elder
}