# Vampire aging and blood potency

namespace = vampire_aging_events

# These are triggered from on_decade_pulse, but should instead be delayed from the character initialisation.

character_event = {
    id = vampire_aging_events.1
    hide_window = yes
    min_age = 100
    is_triggered_only = yes
   
    trigger = {
        trait = neonate
    }

    immediate = {  
        add_trait = ancilla
    }
}

character_event = {
    id = vampire_aging_events.2
    hide_window = yes
    min_age = 250
    is_triggered_only = yes
   
    trigger = {
        trait = ancilla
    }
   
    immediate = {  
        add_trait = elder
    }
}

character_event = {
    id = vampire_aging_events.3
    hide_window = yes
    min_age = 500
    is_triggered_only = yes  
   
    trigger = {
        trait = elder
    }
   
    immediate = {  
        add_trait = ancient
    }
}

character_event = {
    id = vampire_aging_events.4
    hide_window = yes
    min_age = 1000
    is_triggered_only = yes  
   
    trigger = {
        trait = ancient
    }
   
    immediate = {  
        add_trait = methuselah
    }
}


character_event = {
    id = vampire_aging_events.5
    hide_window = yes
    min_age = 50
   
    trigger = {
        trait = vampire
        NOT = { trait = bloodpotency_10 }
        NOT = vampgeneration_15
        NOT = vampgeneration_14
        NOT = vampgeneration_13
        NOT = vampgeneration_12 		
    }
    immediate = {
        if = {
            limit = {
                trait = bloodpotency_9
                age = 450
                NOT = vampgeneration_11
                NOT = vampgeneration_10
                NOT = vampgeneration_9
                NOT = vampgeneration_8
                NOT = vampgeneration_7
                NOT = vampgeneration_6
                NOT = vampgeneration_5
                NOT = vampgeneration_4  
            }
            add_trait = bloodpotency_10
        }
        if = {
            limit = {
                trait = bloodpotency_8
                age = 400
                NOT = vampgeneration_11
                NOT = vampgeneration_10
                NOT = vampgeneration_9
                NOT = vampgeneration_8
                NOT = vampgeneration_7
                NOT = vampgeneration_6
                NOT = vampgeneration_5                      
            }
            add_trait = bloodpotency_9
        }
        if = {
            limit = {
                trait = bloodpotency_7
                age = 350
                NOT = vampgeneration_11
                NOT = vampgeneration_10
                NOT = vampgeneration_9
                NOT = vampgeneration_8
                NOT = vampgeneration_7
                NOT = vampgeneration_6
            }
            add_trait = bloodpotency_8
        }
        if = {
            limit = {
                trait = bloodpotency_6
                age = 300
                NOT = vampgeneration_11
                NOT = vampgeneration_10
                NOT = vampgeneration_9
                NOT = vampgeneration_8
                NOT = vampgeneration_7      
            }
            add_trait = bloodpotency_7
        }  
        if = {
            limit = {
                trait = bloodpotency_5
                age = 250
                NOT = vampgeneration_11
                NOT = vampgeneration_10
                NOT = vampgeneration_9
                NOT = vampgeneration_8                                  
            }
            add_trait = bloodpotency_6
        }          
        if = {
            limit = {
                trait = bloodpotency_4
                age = 200
                NOT = vampgeneration_11
                NOT = vampgeneration_10
                NOT = vampgeneration_9                      
            }
            add_trait = bloodpotency_5
        }
        if = {
            limit = {
                trait = bloodpotency_3
                age = 150
                NOT = vampgeneration_11
                NOT = vampgeneration_10                      
            }
            add_trait = bloodpotency_4
        }  
        if = {
            limit = {
                trait = bloodpotency_2
                age = 100
                NOT = vampgeneration_11                  
            }
            add_trait = bloodpotency_3
        }
        if = {
            limit = {
                trait = bloodpotency_1                   
            }
            add_trait = bloodpotency_2
        }
    }
}

character_event = {
    id = vampire_aging_events.6
    hide_window = yes
    min_age = 100
    is_triggered_only = yes

    trigger = {
        trait = torpor
        NOT = { trait = vampgeneration3 }
        NOT = { trait = vampgeneration2 }
        NOT = { trait = vampgeneration1 }		
    }
   
    immediate = {
        trigger_switch = {
            on_trigger = trait
            bloodpotency_2 = { add_trait = bloodpotency_1 }
            bloodpotency_3 = { add_trait = bloodpotency_2 }
            bloodpotency_4 = { add_trait = bloodpotency_3 }
            bloodpotency_5 = { add_trait = bloodpotency_4 }
            bloodpotency_6 = { add_trait = bloodpotency_5 }
            bloodpotency_7 = { add_trait = bloodpotency_6 }
            bloodpotency_8 = { add_trait = bloodpotency_7 }
            bloodpotency_9 = { add_trait = bloodpotency_8 }
            bloodpotency_10 = { add_trait = bloodpotency_9 }
			}
		}
	}

#This event should be changed to an on_decade_pulse. We'd need a function that assigns a base chance of awakening for a given time in torpor.
#Then the value of the function should be modified by bloodpotency level. The function can be simulated with if clauses.

character_event = {
    id = vampire_aging_events.7
    hide_window = yes
    is_triggered_only = yes
    min_age = 100
   
    trigger = {
        trait = vampire
        trait = torpor
        NOT = { trait = vampgeneration3 }
        NOT = { trait = vampgeneration2 }
        NOT = { trait = vampgeneration1 }
    }
   
    immediate = {  

		if = { limit = { trait = torpor }
				random = {
					chance = 50
					POD_vampire_awaken_torpor_effect = yes 
					}
			}
	
		if = { limit = { trait = bloodpotency_1 }
				random = {
					chance = 90
					POD_vampire_awaken_torpor_effect = yes 
					}
				}
				
		if = { limit = { trait = bloodpotency_2 }
				random = {
					chance = 50
					POD_vampire_awaken_torpor_effect = yes 
					}
				}	
				
		if = { limit = { trait = bloodpotency_3 }
				random = {
					chance = 40
					POD_vampire_awaken_torpor_effect = yes 
					}
				}
				
		if = { limit = { trait = bloodpotency_4 }
				random = {
					chance = 30
					POD_vampire_awaken_torpor_effect = yes 
					}
				}				
 		if = { limit = { trait = bloodpotency_5 }
				random = {
					chance = 25
					POD_vampire_awaken_torpor_effect = yes 
					}
				}				
		if = { limit = { trait = bloodpotency_6}
				random = {
					chance = 20
					POD_vampire_awaken_torpor_effect = yes 
					}
				}	
		if = { limit = { trait = bloodpotency_7 }
				random = {
					chance = 15
					POD_vampire_awaken_torpor_effect = yes 
					}
				}
				
		if = { limit = { trait = bloodpotency_8 }
				random = {
					chance = 10
					POD_vampire_awaken_torpor_effect = yes 
					}
				}				
 		if = { limit = { trait = bloodpotency_9
				random = {
					chance = 5
					POD_vampire_awaken_torpor_effect = yes 
					}
				}				
		if = { limit = { trait = bloodpotency_10 }
				random = {
					chance = 1
					POD_vampire_awaken_torpor_effect = yes 
					}
				}
		
		}
	}
	}

character_event = {
    id = vampire_aging_events.8					
    hide_window = yes
    min_age = 100
    is_triggered_only = yes
   
    trigger = {
        trait = torpor
		num_of_children = 0
		num_of_claims = 0
		num_of_lovers = 0
		num_of_feuds = 0
		num_of_rivals = 0
		num_of_friends = 0
		num_of_spouses = 0 
		NOT = { trait = canon }
		NOT = { trait = methuselah }
		NOT = { trait = ancient }
		NOT = { trait = antediluvian } 
    }

    immediate = {  
        random = {
					chance = 50
					death = { death_reason = death_vanished  }
					
					}
				}
    }
